from __future__ import annotations

from typing import Any
from typing import List
from typing import Type

import System
import System.Collections
import System.ComponentModel
import System.Configuration
import System.Configuration.Assemblies
import System.Data
import System.Globalization
import System.IO
import System.Reflection
import System.Runtime
import System.Runtime.CompilerServices
import System.Runtime.InteropServices
import System.Runtime.Remoting
import System.Runtime.Serialization
import System.Security
import System.Security.Cryptography
import System.Security.Cryptography.X509Certificates
import System.Security.Policy
import System.Threading
import System.Threading.Tasks
import System.Xml
import System.Xml.Schema
import System.Xml.Serialization
from System.ComponentModel import MarshalByValueComponent


class FileSecurity:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def AccessRightType(self): ...

    @AccessRightType.setter
    def AccessRightType(self, value): ...

    def AccessRuleFactory(self,
            _: System.Security.Principal.IdentityReference,
            __: int,
            ___: bool,
            ____: InheritanceFlags,
            _____: PropagationFlags,
            ______: AccessControlType,
            ) -> AccessRule: ...

    @property
    def AccessRuleType(self): ...

    @AccessRuleType.setter
    def AccessRuleType(self, value): ...

    @property
    def AccessRulesModified(self): ...

    @AccessRulesModified.setter
    def AccessRulesModified(self, value): ...
    def AddAccessRule(self, _: AccessRule) -> None: ...
    def AddAuditRule(self, _: AuditRule) -> None: ...

    @property
    def AreAccessRulesCanonical(self): ...

    @AreAccessRulesCanonical.setter
    def AreAccessRulesCanonical(self, value): ...

    @property
    def AreAccessRulesProtected(self): ...

    @AreAccessRulesProtected.setter
    def AreAccessRulesProtected(self, value): ...

    @property
    def AreAuditRulesCanonical(self): ...

    @AreAuditRulesCanonical.setter
    def AreAuditRulesCanonical(self, value): ...

    @property
    def AreAuditRulesProtected(self): ...

    @AreAuditRulesProtected.setter
    def AreAuditRulesProtected(self, value): ...

    def AuditRuleFactory(self,
            _: System.Security.Principal.IdentityReference,
            __: int,
            ___: bool,
            ____: InheritanceFlags,
            _____: PropagationFlags,
            ______: AuditFlags,
            ) -> AuditRule: ...

    @property
    def AuditRuleType(self): ...

    @AuditRuleType.setter
    def AuditRuleType(self, value): ...

    @property
    def AuditRulesModified(self): ...

    @AuditRulesModified.setter
    def AuditRulesModified(self, value): ...
    def Equals(self, _: object, __: object) -> bool: ...
    def ExceptionFromErrorCode(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def GetAccessRules(self,
            _: bool,
            __: bool,
            ___: Type,
            ) -> AuthorizationRuleCollection: ...

    def GetAuditRules(self,
            _: bool,
            __: bool,
            ___: Type,
            ) -> AuthorizationRuleCollection: ...

    def GetGroup(self, _: Type) -> System.Security.Principal.IdentityReference: ...
    def GetHashCode(self) -> int: ...
    def GetOwner(self, _: Type) -> System.Security.Principal.IdentityReference: ...
    def GetSecurityDescriptorBinaryForm(self) -> List[bytes]: ...

    def GetSecurityDescriptorSddlForm(self,
            _: AccessControlSections,
            ) -> str: ...

    def GetType(self) -> Type: ...

    @property
    def GroupModified(self): ...

    @GroupModified.setter
    def GroupModified(self, value): ...

    @property
    def IsContainer(self): ...

    @IsContainer.setter
    def IsContainer(self, value): ...

    @property
    def IsDS(self): ...

    @IsDS.setter
    def IsDS(self, value): ...
    def IsSddlConversionSupported(self) -> bool: ...
    def MemberwiseClone(self) -> object: ...

    def ModifyAccess(self,
            _: AccessControlModification,
            __: AccessRule,
            ___: bool,
            ) -> bool: ...

    def ModifyAccessRule(self,
            _: AccessControlModification,
            __: AccessRule,
            ___: bool,
            ) -> bool: ...

    def ModifyAudit(self,
            _: AccessControlModification,
            __: AuditRule,
            ___: bool,
            ) -> bool: ...

    def ModifyAuditRule(self,
            _: AccessControlModification,
            __: AuditRule,
            ___: bool,
            ) -> bool: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def OwnerModified(self): ...

    @OwnerModified.setter
    def OwnerModified(self, value): ...

    def Persist(self,
            _: bool,
            __: str,
            ___: AccessControlSections,
            ) -> None: ...

    def PurgeAccessRules(self, _: System.Security.Principal.IdentityReference) -> None: ...
    def PurgeAuditRules(self, _: System.Security.Principal.IdentityReference) -> None: ...
    def ReadLock(self) -> None: ...
    def ReadUnlock(self) -> None: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def RemoveAccessRule(self, _: AccessRule) -> bool: ...
    def RemoveAccessRuleAll(self, _: AccessRule) -> None: ...

    def RemoveAccessRuleSpecific(self,
            _: AccessRule,
            ) -> None: ...

    def RemoveAuditRule(self, _: AuditRule) -> bool: ...
    def RemoveAuditRuleAll(self, _: AuditRule) -> None: ...

    def RemoveAuditRuleSpecific(self,
            _: AuditRule,
            ) -> None: ...

    def ResetAccessRule(self, _: AccessRule) -> None: ...
    def SetAccessRule(self, _: AccessRule) -> None: ...
    def SetAccessRuleProtection(self, _: bool, __: bool) -> None: ...
    def SetAuditRule(self, _: AuditRule) -> None: ...
    def SetAuditRuleProtection(self, _: bool, __: bool) -> None: ...
    def SetGroup(self, _: System.Security.Principal.IdentityReference) -> None: ...
    def SetOwner(self, _: System.Security.Principal.IdentityReference) -> None: ...

    def SetSecurityDescriptorBinaryForm(self,
            _: List[bytes],
            __: AccessControlSections,
            ) -> None: ...

    def SetSecurityDescriptorSddlForm(self,
            _: str,
            __: AccessControlSections,
            ) -> None: ...

    def ToString(self) -> str: ...
    def WriteLock(self) -> None: ...
    def WriteUnlock(self) -> None: ...
    def get_AccessRightType(self) -> Type: ...
    def get_AccessRuleType(self) -> Type: ...
    def get_AccessRulesModified(self) -> bool: ...
    def get_AreAccessRulesCanonical(self) -> bool: ...
    def get_AreAccessRulesProtected(self) -> bool: ...
    def get_AreAuditRulesCanonical(self) -> bool: ...
    def get_AreAuditRulesProtected(self) -> bool: ...
    def get_AuditRuleType(self) -> Type: ...
    def get_AuditRulesModified(self) -> bool: ...
    def get_GroupModified(self) -> bool: ...
    def get_IsContainer(self) -> bool: ...
    def get_IsDS(self) -> bool: ...
    def get_OwnerModified(self) -> bool: ...
    def set_AccessRulesModified(self, _: bool) -> None: ...
    def set_AuditRulesModified(self, _: bool) -> None: ...
    def set_GroupModified(self, _: bool) -> None: ...
    def set_OwnerModified(self, _: bool) -> None: ...
