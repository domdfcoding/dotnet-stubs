from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Type

import System
import System.Collections
import System.Configuration
import System.Configuration.Assemblies
import System.Data
import System.Globalization
import System.IO
import System.Reflection
import System.Runtime
import System.Runtime.CompilerServices
import System.Runtime.InteropServices
import System.Runtime.Remoting
import System.Runtime.Serialization
import System.Security
import System.Security.AccessControl
import System.Security.Cryptography
import System.Security.Cryptography.X509Certificates
import System.Security.Policy
import System.Threading
import System.Threading.Tasks
import System.Xml
import System.Xml.Schema
import System.Xml.Serialization
from System.ComponentModel import MarshalByValueComponent


class TypeCode:

    def Boolean(self, *args, **kwargs) -> Any: ...

    def Byte(self, *args, **kwargs) -> Any: ...

    def Char(self, *args, **kwargs) -> Any: ...

    def CompareTo(self, _: object) -> int: ...

    def DBNull(self, *args, **kwargs) -> Any: ...

    def DateTime(self, *args, **kwargs) -> Any: ...

    def Decimal(self, *args, **kwargs) -> Any: ...

    def Double(self, *args, **kwargs) -> Any: ...

    def Empty(self, *args, **kwargs) -> Any: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def Format(self, _: Type, __: object, ___: str) -> str: ...

    def GetHashCode(self) -> int: ...

    def GetName(self, _: Type, __: object) -> str: ...

    def GetNames(self, _: Type) -> List[str]: ...

    def GetType(self) -> Type: ...

    def GetTypeCode(self) -> Any: ...

    def GetUnderlyingType(self, _: Type) -> Type: ...

    def GetValues(self, _: Type) -> List: ...

    def HasFlag(self, _: Enum) -> bool: ...

    def Int16(self, *args, **kwargs) -> Any: ...

    def Int32(self, *args, **kwargs) -> Any: ...

    def Int64(self, *args, **kwargs) -> Any: ...

    def IsDefined(self, _: Type, __: object) -> bool: ...

    def MemberwiseClone(self) -> object: ...

    def Object(self, *args, **kwargs) -> Any: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self, _: Type, __: str, ___: bool) -> object: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def SByte(self, *args, **kwargs) -> Any: ...

    def Single(self, *args, **kwargs) -> Any: ...

    def String(self, *args, **kwargs) -> Any: ...

    def ToObject(self, _: Type, __: object) -> object: ...

    def ToString(self, _: str, __: Any) -> str: ...

    def TryParse(self, *args, **kwargs) -> Any: ...

    def UInt16(self, *args, **kwargs) -> Any: ...

    def UInt32(self, *args, **kwargs) -> Any: ...

    def UInt64(self, *args, **kwargs) -> Any: ...

    def __init__(self, *args, **kwargs) -> Any: ...


class Predicate:

    def BeginInvoke(self, _: Any, __: Any, ___: object) -> Any: ...

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def EndInvoke(self, _: Any) -> bool: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def Invoke(self, _: Any) -> bool: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class TimeSpan:

    def Add(self, _: System.TimeSpan) -> System.TimeSpan: ...

    def Compare(self, _: System.TimeSpan, __: System.TimeSpan) -> int: ...

    def CompareTo(self, _: object) -> int: ...

    @property
    def Days(self): ...

    @Days.setter
    def Days(self): ...

    def Duration(self) -> System.TimeSpan: ...

    def Equals(self, _: System.TimeSpan, __: System.TimeSpan) -> bool: ...

    def Finalize(self) -> None: ...

    def FromDays(self, _: float) -> System.TimeSpan: ...

    def FromHours(self, _: float) -> System.TimeSpan: ...

    def FromMilliseconds(self, _: float) -> System.TimeSpan: ...

    def FromMinutes(self, _: float) -> System.TimeSpan: ...

    def FromSeconds(self, _: float) -> System.TimeSpan: ...

    def FromTicks(self, _: int) -> System.TimeSpan: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    @property
    def Hours(self): ...

    @Hours.setter
    def Hours(self): ...

    def MaxValue(self, *args, **kwargs) -> Any: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Milliseconds(self): ...

    @Milliseconds.setter
    def Milliseconds(self): ...

    def MinValue(self, *args, **kwargs) -> Any: ...

    @property
    def Minutes(self): ...

    @Minutes.setter
    def Minutes(self): ...

    def Negate(self) -> System.TimeSpan: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self, _: str, __: Any) -> System.TimeSpan: ...

    def ParseExact(self,
            _: str,
            __: str,
            ___: Any,
            ____: System.Globalization.TimeSpanStyles,
            ) -> System.TimeSpan: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    @property
    def Seconds(self): ...

    @Seconds.setter
    def Seconds(self): ...

    def Subtract(self, _: System.TimeSpan) -> System.TimeSpan: ...

    @property
    def Ticks(self): ...

    @Ticks.setter
    def Ticks(self): ...

    def TicksPerDay(self, *args, **kwargs) -> Any: ...

    def TicksPerHour(self, *args, **kwargs) -> Any: ...

    def TicksPerMillisecond(self, *args, **kwargs) -> Any: ...

    def TicksPerMinute(self, *args, **kwargs) -> Any: ...

    def TicksPerSecond(self, *args, **kwargs) -> Any: ...

    def ToString(self, _: str, __: Any) -> str: ...

    @property
    def TotalDays(self): ...

    @TotalDays.setter
    def TotalDays(self): ...

    @property
    def TotalHours(self): ...

    @TotalHours.setter
    def TotalHours(self): ...

    @property
    def TotalMilliseconds(self): ...

    @TotalMilliseconds.setter
    def TotalMilliseconds(self): ...

    @property
    def TotalMinutes(self): ...

    @TotalMinutes.setter
    def TotalMinutes(self): ...

    @property
    def TotalSeconds(self): ...

    @TotalSeconds.setter
    def TotalSeconds(self): ...

    def TryParse(self, _: str, __: Any, ___: System.TimeSpan) -> bool: ...

    def TryParseExact(self,
            _: str,
            __: str,
            ___: Any,
            ____: System.Globalization.TimeSpanStyles,
            _____: System.TimeSpan,
            ) -> bool: ...

    def Zero(self, *args, **kwargs) -> Any: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Days(self) -> int: ...

    def get_Hours(self) -> int: ...

    def get_Milliseconds(self) -> int: ...

    def get_Minutes(self) -> int: ...

    def get_Seconds(self) -> int: ...

    def get_Ticks(self) -> int: ...

    def get_TotalDays(self) -> float: ...

    def get_TotalHours(self) -> float: ...

    def get_TotalMilliseconds(self) -> float: ...

    def get_TotalMinutes(self) -> float: ...

    def get_TotalSeconds(self) -> float: ...

    def op_Addition(self, _: System.TimeSpan, __: System.TimeSpan) -> System.TimeSpan: ...

    def op_Equality(self, _: System.TimeSpan, __: System.TimeSpan) -> bool: ...

    def op_GreaterThan(self, _: System.TimeSpan, __: System.TimeSpan) -> bool: ...

    def op_GreaterThanOrEqual(self, _: System.TimeSpan, __: System.TimeSpan) -> bool: ...

    def op_Inequality(self, _: System.TimeSpan, __: System.TimeSpan) -> bool: ...

    def op_LessThan(self, _: System.TimeSpan, __: System.TimeSpan) -> bool: ...

    def op_LessThanOrEqual(self, _: System.TimeSpan, __: System.TimeSpan) -> bool: ...

    def op_Subtraction(self,
            _: System.TimeSpan,
            __: System.TimeSpan,
            ) -> System.TimeSpan: ...

    def op_UnaryNegation(self, _: System.TimeSpan) -> System.TimeSpan: ...

    def op_UnaryPlus(self, _: System.TimeSpan) -> System.TimeSpan: ...


class ModuleHandle:

    def EmptyHandle(self, *args, **kwargs) -> Any: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetRuntimeFieldHandleFromMetadataToken(self,
            _: int,
            ) -> System.RuntimeFieldHandle: ...

    def GetRuntimeMethodHandleFromMetadataToken(self,
            _: int,
            ) -> System.RuntimeMethodHandle: ...

    def GetRuntimeTypeHandleFromMetadataToken(self,
            _: int,
            ) -> System.RuntimeTypeHandle: ...

    def GetType(self) -> Type: ...

    @property
    def MDStreamVersion(self): ...

    @MDStreamVersion.setter
    def MDStreamVersion(self): ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ResolveFieldHandle(self,
            _: int,
            __: List[System.RuntimeTypeHandle],
            ___: List[System.RuntimeTypeHandle],
            ) -> System.RuntimeFieldHandle: ...

    def ResolveMethodHandle(self,
            _: int,
            __: List[System.RuntimeTypeHandle],
            ___: List[System.RuntimeTypeHandle],
            ) -> System.RuntimeMethodHandle: ...

    def ResolveTypeHandle(self,
            _: int,
            __: List[System.RuntimeTypeHandle],
            ___: List[System.RuntimeTypeHandle],
            ) -> System.RuntimeTypeHandle: ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_MDStreamVersion(self) -> int: ...

    def op_Equality(self, _: System.ModuleHandle, __: System.ModuleHandle) -> bool: ...

    def op_Inequality(self, _: System.ModuleHandle, __: System.ModuleHandle) -> bool: ...


class Delegate:

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class IAsyncResult:

    @property
    def AsyncState(self): ...

    @AsyncState.setter
    def AsyncState(self): ...

    @property
    def AsyncWaitHandle(self): ...

    @AsyncWaitHandle.setter
    def AsyncWaitHandle(self): ...

    @property
    def CompletedSynchronously(self): ...

    @CompletedSynchronously.setter
    def CompletedSynchronously(self): ...

    @property
    def IsCompleted(self): ...

    @IsCompleted.setter
    def IsCompleted(self): ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_AsyncState(self) -> object: ...

    def get_AsyncWaitHandle(self) -> System.Threading.WaitHandle: ...

    def get_CompletedSynchronously(self) -> bool: ...

    def get_IsCompleted(self) -> bool: ...


class MulticastDelegate:

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class EventHandler:

    def BeginInvoke(self,
            _: object,
            __: System.EventArgs,
            ___: Any,
            ____: object,
            ) -> Any: ...

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def EndInvoke(self, _: Any) -> None: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def Invoke(self, _: object, __: System.EventArgs) -> None: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class IFormatProvider:

    def GetFormat(self, _: Type) -> object: ...

    def __init__(self, *args, **kwargs) -> Any: ...


class AsyncCallback:

    def BeginInvoke(self, _: Any, __: Any, ___: object) -> Any: ...

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def EndInvoke(self, _: Any) -> None: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def Invoke(self, _: Any) -> None: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class EventArgs:

    def Empty(self, *args, **kwargs) -> Any: ...

    def Equals(self, _: object, __: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...


class DateTime:

    def Add(self, _: System.TimeSpan) -> System.DateTime: ...

    def AddDays(self, _: float) -> System.DateTime: ...

    def AddHours(self, _: float) -> System.DateTime: ...

    def AddMilliseconds(self, _: float) -> System.DateTime: ...

    def AddMinutes(self, _: float) -> System.DateTime: ...

    def AddMonths(self, _: int) -> System.DateTime: ...

    def AddSeconds(self, _: float) -> System.DateTime: ...

    def AddTicks(self, _: int) -> System.DateTime: ...

    def AddYears(self, _: int) -> System.DateTime: ...

    def Compare(self, _: System.DateTime, __: System.DateTime) -> int: ...

    def CompareTo(self, _: object) -> int: ...

    @property
    def Date(self): ...

    @Date.setter
    def Date(self): ...

    @property
    def Day(self): ...

    @Day.setter
    def Day(self): ...

    @property
    def DayOfWeek(self): ...

    @DayOfWeek.setter
    def DayOfWeek(self): ...

    @property
    def DayOfYear(self): ...

    @DayOfYear.setter
    def DayOfYear(self): ...

    def DaysInMonth(self, _: int, __: int) -> int: ...

    def Equals(self, _: System.DateTime, __: System.DateTime) -> bool: ...

    def Finalize(self) -> None: ...

    def FromBinary(self, _: int) -> System.DateTime: ...

    def FromFileTime(self, _: int) -> System.DateTime: ...

    def FromFileTimeUtc(self, _: int) -> System.DateTime: ...

    def FromOADate(self, _: float) -> System.DateTime: ...

    def GetDateTimeFormats(self, _: str, __: Any) -> List[str]: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    def GetTypeCode(self) -> Any: ...

    @property
    def Hour(self): ...

    @Hour.setter
    def Hour(self): ...

    def IsDaylightSavingTime(self) -> bool: ...

    def IsLeapYear(self, _: int) -> bool: ...

    @property
    def Kind(self): ...

    @Kind.setter
    def Kind(self): ...

    def MaxValue(self, *args, **kwargs) -> Any: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Millisecond(self): ...

    @Millisecond.setter
    def Millisecond(self): ...

    def MinValue(self, *args, **kwargs) -> Any: ...

    @property
    def Minute(self): ...

    @Minute.setter
    def Minute(self): ...

    @property
    def Month(self): ...

    @Month.setter
    def Month(self): ...

    def Now(self, *args, **kwargs) -> Any: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self,
            _: str,
            __: Any,
            ___: System.Globalization.DateTimeStyles,
            ) -> System.DateTime: ...

    def ParseExact(self,
            _: str,
            __: str,
            ___: Any,
            ____: System.Globalization.DateTimeStyles,
            ) -> System.DateTime: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    @property
    def Second(self): ...

    @Second.setter
    def Second(self): ...

    def SpecifyKind(self,
            _: System.DateTime,
            __: System.DateTimeKind,
            ) -> System.DateTime: ...

    def Subtract(self, _: System.DateTime) -> System.TimeSpan: ...

    @property
    def Ticks(self): ...

    @Ticks.setter
    def Ticks(self): ...

    @property
    def TimeOfDay(self): ...

    @TimeOfDay.setter
    def TimeOfDay(self): ...

    def ToBinary(self) -> int: ...

    def ToFileTime(self) -> int: ...

    def ToFileTimeUtc(self) -> int: ...

    def ToLocalTime(self) -> System.DateTime: ...

    def ToLongDateString(self) -> str: ...

    def ToLongTimeString(self) -> str: ...

    def ToOADate(self) -> float: ...

    def ToShortDateString(self) -> str: ...

    def ToShortTimeString(self) -> str: ...

    def ToString(self, _: str, __: Any) -> str: ...

    def ToUniversalTime(self) -> System.DateTime: ...

    def Today(self, *args, **kwargs) -> Any: ...

    def TryParse(self,
            _: str,
            __: Any,
            ___: System.Globalization.DateTimeStyles,
            ____: System.DateTime,
            ) -> bool: ...

    def TryParseExact(self,
            _: str,
            __: str,
            ___: Any,
            ____: System.Globalization.DateTimeStyles,
            _____: System.DateTime,
            ) -> bool: ...

    def UtcNow(self, *args, **kwargs) -> Any: ...

    @property
    def Year(self): ...

    @Year.setter
    def Year(self): ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Date(self) -> System.DateTime: ...

    def get_Day(self) -> int: ...

    def get_DayOfWeek(self) -> System.DayOfWeek: ...

    def get_DayOfYear(self) -> int: ...

    def get_Hour(self) -> int: ...

    def get_Kind(self) -> System.DateTimeKind: ...

    def get_Millisecond(self) -> int: ...

    def get_Minute(self) -> int: ...

    def get_Month(self) -> int: ...

    def get_Now(self) -> System.DateTime: ...

    def get_Second(self) -> int: ...

    def get_Ticks(self) -> int: ...

    def get_TimeOfDay(self) -> System.TimeSpan: ...

    def get_Today(self) -> System.DateTime: ...

    def get_UtcNow(self) -> System.DateTime: ...

    def get_Year(self) -> int: ...

    def op_Addition(self, _: System.DateTime, __: System.TimeSpan) -> System.DateTime: ...

    def op_Equality(self, _: System.DateTime, __: System.DateTime) -> bool: ...

    def op_GreaterThan(self, _: System.DateTime, __: System.DateTime) -> bool: ...

    def op_GreaterThanOrEqual(self, _: System.DateTime, __: System.DateTime) -> bool: ...

    def op_Inequality(self, _: System.DateTime, __: System.DateTime) -> bool: ...

    def op_LessThan(self, _: System.DateTime, __: System.DateTime) -> bool: ...

    def op_LessThanOrEqual(self, _: System.DateTime, __: System.DateTime) -> bool: ...

    def op_Subtraction(self,
            _: System.DateTime,
            __: System.DateTime,
            ) -> System.TimeSpan: ...


class Guid:

    def CompareTo(self, _: object) -> int: ...

    def Empty(self, *args, **kwargs) -> Any: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    def NewGuid(self) -> System.Guid: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self, _: str) -> System.Guid: ...

    def ParseExact(self, _: str, __: str) -> System.Guid: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToByteArray(self) -> List[bytes]: ...

    def ToString(self, _: str, __: Any) -> str: ...

    def TryParse(self, _: str, __: System.Guid) -> bool: ...

    def TryParseExact(self, _: str, __: str, ___: System.Guid) -> bool: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def op_Equality(self, _: System.Guid, __: System.Guid) -> bool: ...

    def op_Inequality(self, _: System.Guid, __: System.Guid) -> bool: ...


class Converter:

    def BeginInvoke(self, _: Any, __: Any, ___: object) -> Any: ...

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def EndInvoke(self, _: Any) -> Any: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def Invoke(self, _: Any) -> Any: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class RuntimeMethodHandle:

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetFunctionPointer(self) -> Any: ...

    def GetHashCode(self) -> int: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToString(self) -> str: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self): ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Value(self) -> Any: ...

    def op_Equality(self,
            _: System.RuntimeMethodHandle,
            __: System.RuntimeMethodHandle,
            ) -> bool: ...

    def op_Inequality(self,
            _: System.RuntimeMethodHandle,
            __: System.RuntimeMethodHandle,
            ) -> bool: ...


class RuntimeTypeHandle:

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetModuleHandle(self) -> System.ModuleHandle: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToString(self) -> str: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self): ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Value(self) -> Any: ...

    def op_Equality(self, _: System.RuntimeTypeHandle, __: object) -> bool: ...

    def op_Inequality(self, _: System.RuntimeTypeHandle, __: object) -> bool: ...


class DateTimeKind:

    def CompareTo(self, _: object) -> int: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def Format(self, _: Type, __: object, ___: str) -> str: ...

    def GetHashCode(self) -> int: ...

    def GetName(self, _: Type, __: object) -> str: ...

    def GetNames(self, _: Type) -> List[str]: ...

    def GetType(self) -> Type: ...

    def GetTypeCode(self) -> Any: ...

    def GetUnderlyingType(self, _: Type) -> Type: ...

    def GetValues(self, _: Type) -> List: ...

    def HasFlag(self, _: Enum) -> bool: ...

    def IsDefined(self, _: Type, __: object) -> bool: ...

    def Local(self, *args, **kwargs) -> Any: ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self, _: Type, __: str, ___: bool) -> object: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToObject(self, _: Type, __: object) -> object: ...

    def ToString(self, _: str, __: Any) -> str: ...

    def TryParse(self, *args, **kwargs) -> Any: ...

    def Unspecified(self, *args, **kwargs) -> Any: ...

    def Utc(self, *args, **kwargs) -> Any: ...

    def __init__(self, *args, **kwargs) -> Any: ...


class RuntimeFieldHandle:

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToString(self) -> str: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self): ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Value(self) -> Any: ...

    def op_Equality(self,
            _: System.RuntimeFieldHandle,
            __: System.RuntimeFieldHandle,
            ) -> bool: ...

    def op_Inequality(self,
            _: System.RuntimeFieldHandle,
            __: System.RuntimeFieldHandle,
            ) -> bool: ...


class Version:

    @property
    def Build(self): ...

    @Build.setter
    def Build(self): ...

    def Clone(self) -> object: ...

    def CompareTo(self, _: object) -> int: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    @property
    def Major(self): ...

    @Major.setter
    def Major(self): ...

    @property
    def MajorRevision(self): ...

    @MajorRevision.setter
    def MajorRevision(self): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Minor(self): ...

    @Minor.setter
    def Minor(self): ...

    @property
    def MinorRevision(self): ...

    @MinorRevision.setter
    def MinorRevision(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self, _: str) -> System.Version: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    @property
    def Revision(self): ...

    @Revision.setter
    def Revision(self): ...

    def ToString(self, _: int) -> str: ...

    def TryParse(self, _: str, __: System.Version) -> bool: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Build(self) -> int: ...

    def get_Major(self) -> int: ...

    def get_MajorRevision(self) -> int: ...

    def get_Minor(self) -> int: ...

    def get_MinorRevision(self) -> int: ...

    def get_Revision(self) -> int: ...

    def op_Equality(self, _: System.Version, __: System.Version) -> bool: ...

    def op_GreaterThan(self, _: System.Version, __: System.Version) -> bool: ...

    def op_GreaterThanOrEqual(self, _: System.Version, __: System.Version) -> bool: ...

    def op_Inequality(self, _: System.Version, __: System.Version) -> bool: ...

    def op_LessThan(self, _: System.Version, __: System.Version) -> bool: ...

    def op_LessThanOrEqual(self, _: System.Version, __: System.Version) -> bool: ...


class ResolveEventArgs:

    def Empty(self, *args, **kwargs) -> Any: ...

    def Equals(self, _: object, __: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    @property
    def RequestingAssembly(self): ...

    @RequestingAssembly.setter
    def RequestingAssembly(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Name(self) -> str: ...

    def get_RequestingAssembly(self) -> System.Reflection.Assembly: ...


class Action:

    def BeginInvoke(self, _: Any, __: object) -> Any: ...

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def EndInvoke(self, _: Any) -> None: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def Invoke(self) -> None: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class Object:

    def Equals(self, _: object, __: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...


class Func:

    def BeginInvoke(self, _: Any, __: object) -> Any: ...

    def Clone(self) -> object: ...

    def Combine(self, _: Any, __: Any) -> Any: ...

    def CombineImpl(self, _: Any) -> Any: ...

    def CreateDelegate(self,
            _: Type,
            __: object,
            ___: str,
            ____: bool,
            _____: bool,
            ) -> Any: ...

    def DynamicInvoke(self, _: List[object]) -> object: ...

    def DynamicInvokeImpl(self, _: List[object]) -> object: ...

    def EndInvoke(self, _: Any) -> Any: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetHashCode(self) -> int: ...

    def GetInvocationList(self) -> List[Any]: ...

    def GetMethodImpl(self) -> System.Reflection.MethodInfo: ...

    def GetObjectData(self,
            _: System.Runtime.Serialization.SerializationInfo,
            __: System.Runtime.Serialization.StreamingContext,
            ) -> None: ...

    def GetType(self) -> Type: ...

    def Invoke(self) -> Any: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Method(self): ...

    @Method.setter
    def Method(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Remove(self, _: Any, __: Any) -> Any: ...

    def RemoveAll(self, _: Any, __: Any) -> Any: ...

    def RemoveImpl(self, _: Any) -> Any: ...

    @property
    def Target(self): ...

    @Target.setter
    def Target(self): ...

    def ToString(self) -> str: ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Method(self) -> System.Reflection.MethodInfo: ...

    def get_Target(self) -> object: ...

    def op_Equality(self, _: Any, __: Any) -> bool: ...

    def op_Inequality(self, _: Any, __: Any) -> bool: ...


class Attribute:

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def GetCustomAttribute(self,
            _: System.Reflection.ParameterInfo,
            __: Type,
            ___: bool,
            ) -> System.Attribute: ...

    def GetCustomAttributes(self,
            _: System.Reflection.ParameterInfo,
            __: Type,
            ___: bool,
            ) -> List[System.Attribute]: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    def IsDefaultAttribute(self) -> bool: ...

    def IsDefined(self,
            _: System.Reflection.ParameterInfo,
            __: Type,
            ___: bool,
            ) -> bool: ...

    def Match(self, _: object) -> bool: ...

    def MemberwiseClone(self) -> object: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def ToString(self) -> str: ...

    @property
    def TypeId(self): ...

    @TypeId.setter
    def TypeId(self): ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_TypeId(self) -> object: ...


class DayOfWeek:

    def CompareTo(self, _: object) -> int: ...

    def Equals(self, _: object) -> bool: ...

    def Finalize(self) -> None: ...

    def Format(self, _: Type, __: object, ___: str) -> str: ...

    def Friday(self, *args, **kwargs) -> Any: ...

    def GetHashCode(self) -> int: ...

    def GetName(self, _: Type, __: object) -> str: ...

    def GetNames(self, _: Type) -> List[str]: ...

    def GetType(self) -> Type: ...

    def GetTypeCode(self) -> Any: ...

    def GetUnderlyingType(self, _: Type) -> Type: ...

    def GetValues(self, _: Type) -> List: ...

    def HasFlag(self, _: Enum) -> bool: ...

    def IsDefined(self, _: Type, __: object) -> bool: ...

    def MemberwiseClone(self) -> object: ...

    def Monday(self, *args, **kwargs) -> Any: ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self, _: Type, __: str, ___: bool) -> object: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Saturday(self, *args, **kwargs) -> Any: ...

    def Sunday(self, *args, **kwargs) -> Any: ...

    def Thursday(self, *args, **kwargs) -> Any: ...

    def ToObject(self, _: Type, __: object) -> object: ...

    def ToString(self, _: str, __: Any) -> str: ...

    def TryParse(self, *args, **kwargs) -> Any: ...

    def Tuesday(self, *args, **kwargs) -> Any: ...

    def Wednesday(self, *args, **kwargs) -> Any: ...

    def __init__(self, *args, **kwargs) -> Any: ...


class DateTimeOffset:

    def Add(self, _: System.TimeSpan) -> System.DateTimeOffset: ...

    def AddDays(self, _: float) -> System.DateTimeOffset: ...

    def AddHours(self, _: float) -> System.DateTimeOffset: ...

    def AddMilliseconds(self, _: float) -> System.DateTimeOffset: ...

    def AddMinutes(self, _: float) -> System.DateTimeOffset: ...

    def AddMonths(self, _: int) -> System.DateTimeOffset: ...

    def AddSeconds(self, _: float) -> System.DateTimeOffset: ...

    def AddTicks(self, _: int) -> System.DateTimeOffset: ...

    def AddYears(self, _: int) -> System.DateTimeOffset: ...

    def Compare(self, _: System.DateTimeOffset, __: System.DateTimeOffset) -> int: ...

    def CompareTo(self, _: System.DateTimeOffset) -> int: ...

    @property
    def Date(self): ...

    @Date.setter
    def Date(self): ...

    @property
    def DateTime(self): ...

    @DateTime.setter
    def DateTime(self): ...

    @property
    def Day(self): ...

    @Day.setter
    def Day(self): ...

    @property
    def DayOfWeek(self): ...

    @DayOfWeek.setter
    def DayOfWeek(self): ...

    @property
    def DayOfYear(self): ...

    @DayOfYear.setter
    def DayOfYear(self): ...

    def Equals(self, _: System.DateTimeOffset, __: System.DateTimeOffset) -> bool: ...

    def EqualsExact(self, _: System.DateTimeOffset) -> bool: ...

    def Finalize(self) -> None: ...

    def FromFileTime(self, _: int) -> System.DateTimeOffset: ...

    def FromUnixTimeMilliseconds(self, _: int) -> System.DateTimeOffset: ...

    def FromUnixTimeSeconds(self, _: int) -> System.DateTimeOffset: ...

    def GetHashCode(self) -> int: ...

    def GetType(self) -> Type: ...

    @property
    def Hour(self): ...

    @Hour.setter
    def Hour(self): ...

    @property
    def LocalDateTime(self): ...

    @LocalDateTime.setter
    def LocalDateTime(self): ...

    def MaxValue(self, *args, **kwargs) -> Any: ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Millisecond(self): ...

    @Millisecond.setter
    def Millisecond(self): ...

    def MinValue(self, *args, **kwargs) -> Any: ...

    @property
    def Minute(self): ...

    @Minute.setter
    def Minute(self): ...

    @property
    def Month(self): ...

    @Month.setter
    def Month(self): ...

    def Now(self, *args, **kwargs) -> Any: ...

    @property
    def Offset(self): ...

    @Offset.setter
    def Offset(self): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    def Parse(self,
            _: str,
            __: Any,
            ___: System.Globalization.DateTimeStyles,
            ) -> System.DateTimeOffset: ...

    def ParseExact(self,
            _: str,
            __: str,
            ___: Any,
            ____: System.Globalization.DateTimeStyles,
            ) -> System.DateTimeOffset: ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    @property
    def Second(self): ...

    @Second.setter
    def Second(self): ...

    def Subtract(self, _: System.DateTimeOffset) -> System.TimeSpan: ...

    @property
    def Ticks(self): ...

    @Ticks.setter
    def Ticks(self): ...

    @property
    def TimeOfDay(self): ...

    @TimeOfDay.setter
    def TimeOfDay(self): ...

    def ToFileTime(self) -> int: ...

    def ToLocalTime(self) -> System.DateTimeOffset: ...

    def ToOffset(self, _: System.TimeSpan) -> System.DateTimeOffset: ...

    def ToString(self, _: str, __: Any) -> str: ...

    def ToUniversalTime(self) -> System.DateTimeOffset: ...

    def ToUnixTimeMilliseconds(self) -> int: ...

    def ToUnixTimeSeconds(self) -> int: ...

    def TryParse(self,
            _: str,
            __: Any,
            ___: System.Globalization.DateTimeStyles,
            ____: System.DateTimeOffset,
            ) -> bool: ...

    def TryParseExact(self,
            _: str,
            __: str,
            ___: Any,
            ____: System.Globalization.DateTimeStyles,
            _____: System.DateTimeOffset,
            ) -> bool: ...

    @property
    def UtcDateTime(self): ...

    @UtcDateTime.setter
    def UtcDateTime(self): ...

    def UtcNow(self, *args, **kwargs) -> Any: ...

    @property
    def UtcTicks(self): ...

    @UtcTicks.setter
    def UtcTicks(self): ...

    @property
    def Year(self): ...

    @Year.setter
    def Year(self): ...

    def __init__(self, *args, **kwargs) -> Any: ...

    def get_Date(self) -> System.DateTime: ...

    def get_DateTime(self) -> System.DateTime: ...

    def get_Day(self) -> int: ...

    def get_DayOfWeek(self) -> System.DayOfWeek: ...

    def get_DayOfYear(self) -> int: ...

    def get_Hour(self) -> int: ...

    def get_LocalDateTime(self) -> System.DateTime: ...

    def get_Millisecond(self) -> int: ...

    def get_Minute(self) -> int: ...

    def get_Month(self) -> int: ...

    def get_Now(self) -> System.DateTimeOffset: ...

    def get_Offset(self) -> System.TimeSpan: ...

    def get_Second(self) -> int: ...

    def get_Ticks(self) -> int: ...

    def get_TimeOfDay(self) -> System.TimeSpan: ...

    def get_UtcDateTime(self) -> System.DateTime: ...

    def get_UtcNow(self) -> System.DateTimeOffset: ...

    def get_UtcTicks(self) -> int: ...

    def get_Year(self) -> int: ...

    def op_Addition(self,
            _: System.DateTimeOffset,
            __: System.TimeSpan,
            ) -> System.DateTimeOffset: ...

    def op_Equality(self, _: System.DateTimeOffset, __: System.DateTimeOffset) -> bool: ...

    def op_GreaterThan(self,
            _: System.DateTimeOffset,
            __: System.DateTimeOffset,
            ) -> bool: ...

    def op_GreaterThanOrEqual(self,
            _: System.DateTimeOffset,
            __: System.DateTimeOffset,
            ) -> bool: ...

    def op_Implicit(self, _: System.DateTime) -> System.DateTimeOffset: ...

    def op_Inequality(self,
            _: System.DateTimeOffset,
            __: System.DateTimeOffset,
            ) -> bool: ...

    def op_LessThan(self, _: System.DateTimeOffset, __: System.DateTimeOffset) -> bool: ...

    def op_LessThanOrEqual(self,
            _: System.DateTimeOffset,
            __: System.DateTimeOffset,
            ) -> bool: ...

    def op_Subtraction(self,
            _: System.DateTimeOffset,
            __: System.TimeSpan,
            ) -> System.DateTimeOffset: ...
